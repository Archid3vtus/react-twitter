// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  username String @unique
  email String @unique
  passwordDigest String
  profile Profile?
  followed FollowerRelationship[] @relation("Followed")
  follower FollowerRelationship[] @relation("Follower")
  tweet Tweet[]
}

model Profile {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  displayName String
  bio String?
  photo String?
  birthdate DateTime
  user User @relation(fields: [userId], references: [id])
  userId Int @unique
}

model FollowerRelationship {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  followed User @relation(name: "Followed", fields: [followedId], references: [id])
  followedId Int
  follower User @relation(name: "Follower", fields: [followerId], references: [id])
  followerId Int
}

model Tweet {
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  content String
  user User @relation(fields: [userId], references: [id])
  userId Int
}
